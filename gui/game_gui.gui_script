function return_to_menu()
	local controller_url = "main:/controller#handler"
	msg.post(controller_url, "load_menu")
end

function pause(self, _)
	local controller_url = "main:/controller#handler"
    msg.post(controller_url, "pause_game")
end

function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
    msg.post(".", "acquire_input_focus")
    self.game_over = false
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
	if message_id == hash("update_score") then
		local gui_score = gui.get_node("score")
		gui.set_text(gui_score, message.score)
    elseif message_id == hash("game_over") then
        local gui_game_over = gui.get_node("game_over_screen")
        gui.set_enabled(gui_game_over, true)
        sound.play("/music#game_over")
        gui.animate(gui_game_over, "color.w", 0.9, gui.EASING_LINEAR, 2, 0, pause)
        self.game_over = true
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
    if self.game_over and action.pressed then
        return_to_menu()
    end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
